class Solution {
public:
    
    void solve(vector<int> &nums, vector<int> temp, set<vector<int>> &ans, unordered_map<int, int> &mp){
        if(temp.size()==nums.size()){
            ans.insert(temp);
            return;
        }
        for(int i=0; i<nums.size(); i++){
            if(mp[i]==0){
                mp[i]++;
                temp.push_back(nums[i]);
                solve(nums, temp, ans, mp);
                temp.pop_back();
                mp[i]--;
            }
        }
    }
    
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        set<vector<int>> ans;
        vector<vector<int>> ans1;
        vector<int> temp;
        unordered_map<int, int> mp;
        solve(nums, temp, ans, mp);
        for(auto it: ans){
            ans1.push_back(it);
        }
        return ans1;
    }
};
